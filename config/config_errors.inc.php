<?php
/**
 *
 * @author
 * @version
 * @package
 * @license
 * @copyright (c) 2009 Lynx s.r.l.
 */

/**
 * Error codes raised by the content editor.
 * They start from number 101 to save error codes from 0 to 100 for PHP's error
 * codes in file upload
 */
define('ADA_FILE_UPLOAD_ERROR_UPLOAD',      101);
define('ADA_FILE_UPLOAD_ERROR_MIMETYPE',    102);
define('ADA_FILE_UPLOAD_ERROR_FILESIZE',    103);
define('ADA_FILE_UPLOAD_ERROR_UPLOAD_PATH', 104);

/**
 * Error codes raised while adding a new user
 */
define('ADA_ADD_USER_ERROR'                   , -1);
define('ADA_ADD_USER_ERROR_USER_EXISTS'       , -2);
define('ADA_ADD_USER_ERROR_TESTER_ASSOCIATION', -3);
define('ADA_ADD_USER_ERROR_TESTER'            , -4);
define('ADA_ADD_USER_ERROR_USER_EXISTS_TESTER', -5);
/**
 * Error codes raised while modifying an existing user
 */
define('ADA_SET_USER_ERROR'                   , -10);
define('ADA_SET_USER_ERROR_TESTER_ASSOCIATION', -11);
define('ADA_SET_USER_ERROR_TESTER'            , -12);

/**
 * Error codes raised when checking a date for an event proposal
 */
define('ADA_EVENT_PROPOSAL_ERROR_DATE_FORMAT'     ,  -20);
define('ADA_EVENT_PROPOSAL_ERROR_DATE_IN_THE_PAST',  -21);
define('ADA_EVENT_PROPOSAL_ERROR_DATE_IN_USE'     ,  -22);
define('ADA_EVENT_PROPOSAL_ERROR_SUBJECT'         ,  -23);
define('ADA_EVENT_PROPOSAL_ERROR_RECIPIENT'       ,  -24);

/**
 * AMA error codes
 */
define('AMA_SUCCESS',                 0);
define('AMA_ERROR',                  -1);
define('AMA_ERR_ADD',                -2);
define('AMA_ERR_REMOVE',             -3);
define('AMA_ERR_UNIQUE_KEY',         -4);
define('AMA_ERR_NOT_FOUND',          -5);
define('AMA_ERR_INCONSISTENT_DATA',  -6);
define('AMA_ERR_UPDATE',             -7);
define('AMA_ERR_REF_INT_KEY',        -8);
define('AMA_ERR_WRONG_USER_TYPE',    -9);
define('AMA_ERR_TOO_FEW_ARGS',      -10);
define('AMA_ERR_WRONG_ARGUMENTS',   -11);
define('AMA_ERR_SEND_MSG',          -12);
define('AMA_ERR_READ_MSG',          -13);
define('AMA_ERR_TRANSACTION_FAIL',  -14);
define('AMA_ERR_GET',               -15);
define('AMA_ERR_DB_CONNECTION',     -16);

/**
 * ADA Error Handling
 */

/**
 * Error logging actions
 */
define('ADA_ERROR_LOG_TO_FILE'           , 1);
define('ADA_ERROR_LOG_TO_HTML_COMMENT'   , 2);
define('ADA_ERROR_LOG_TO_HTML'           , 4);
define('ADA_ERROR_LOG_TO_EMAIL'          , 8);
define('ADA_ERROR_LOG_TO_DB'             , 16);
define('ADA_ERROR_REDIRECT_TO_LOGIN'     , 1024);
define('ADA_ERROR_REDIRECT_TO_HOMEPAGE'  , 2048);
define('ADA_ERROR_REDIRECT_TO_ERROR_PAGE', 4096);


/**
 * Error gravity
 */
define('ADA_ERROR_SEVERITY_FATAL' , 1);
define('ADA_ERROR_SEVERITY_NORMAL', 2);
define('ADA_ERROR_SEVERITY_LIGHT' , 3);
define('ADA_ERROR_SEVERITY_NONE',   4);

/**
 * Application
 */
define('ADA_ERROR_PHASE_DEVELOP', 1);
define('ADA_ERROR_PHASE_TEST'   , 2);
define('ADA_ERROR_PHASE_BETA'   , 3);
define('ADA_ERROR_PHASE_PUBLIC' , 4);

/**
 * Application
 */
define('ADA_ERROR_PHASE', ADA_ERROR_PHASE_PUBLIC);


/**
 * General error codes
 */
define('ADA_ERROR_TYPE_IO'     , 1);
define('ADA_ERROR_TYPE_DATA'   , 2);
define('ADA_ERROR_TYPE_SCRIPT' , 3);
define('ADA_ERROR_TYPE_UNKNOWN', 4);

/**
 * Non so se in ada ci servono.
 */
define('ADA_ERROR_ID_READING_FROM_FILE' , 11);
define('ADA_ERROR_ID_WRITING_TO_FILE'   , 12);
define('ADA_ERROR_ID_CONNECTING_TO_DB'  , 13);
define('ADA_ERROR_ID_READING_FROM_DB'   , 14);
define('ADA_ERROR_ID_WRITING_TO_DB'     , 15);

define('ADA_ERROR_ID_INVALID_SESSION'   , 21);
define('ADA_ERROR_ID_INVALID_PARAMETERS', 22);
define('ADA_ERROR_ID_INVALID_USER'      , 23);

define('ADA_ERROR_ID_INVALID_QUERY'     , 31);
define('ADA_ERROR_ID_XML_PARSING'       , 32);

define('ADA_ERROR_ID_UNKNOWN_ERROR'     , 41);

define('ADA_ERROR_ID_USER_REQUIRED_BUT_NOT_FOUND'   , 33);
define('ADA_ERROR_ID_SERVICE_REQUIRED_BUT_NOT_FOUND', 34);
define('ADA_ERROR_ID_CINST_REQUIRED_BUT_NOT_FOUND'  , 35);
define('ADA_ERROR_ID_NODE_REQUIRED_BUT_NOT_FOUND'   , 36);
define('ADA_ERROR_ID_CINST_NOT_PUBLIC'              , 37);


// FIXME: associare la giusta severity agli errori AMA.
$ADA_ERROR_SEVERITY = array(
// AMA Error codes
  AMA_ERROR                 => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_ADD               => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_REMOVE            => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_UNIQUE_KEY        => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_NOT_FOUND         => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_INCONSISTENT_DATA => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_UPDATE            => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_REF_INT_KEY       => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_WRONG_USER_TYPE   => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_TOO_FEW_ARGS      => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_WRONG_ARGUMENTS   => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_SEND_MSG          => ADA_ERROR_SEVERITY_NORMAL,
  AMA_ERR_READ_MSG          => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_TRANSACTION_FAIL  => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_GET               => ADA_ERROR_SEVERITY_FATAL,
  AMA_ERR_DB_CONNECTION     => ADA_ERROR_SEVERITY_FATAL,
// ADA Error codes
  ADA_ERROR_ID_USER_REQUIRED_BUT_NOT_FOUND    => ADA_ERROR_SEVERITY_FATAL,
  ADA_ERROR_ID_SERVICE_REQUIRED_BUT_NOT_FOUND => ADA_ERROR_SEVERITY_FATAL,
  ADA_ERROR_ID_CINST_REQUIRED_BUT_NOT_FOUND   => ADA_ERROR_SEVERITY_FATAL,
  ADA_ERROR_ID_NODE_REQUIRED_BUT_NOT_FOUND     => ADA_ERROR_SEVERITY_FATAL
);

$GLOBALS['ADA_ERROR_SEVERITY'] = $ADA_ERROR_SEVERITY;

$ADA_ERROR_POLICY = array();
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_DEVELOP][ADA_ERROR_SEVERITY_FATAL]  = ADA_ERROR_LOG_TO_HTML;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_DEVELOP][ADA_ERROR_SEVERITY_NORMAL] = ADA_ERROR_LOG_TO_HTML;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_DEVELOP][ADA_ERROR_SEVERITY_LIGHT]  = ADA_ERROR_LOG_TO_FILE | ADA_ERROR_LOG_TO_HTML;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_DEVELOP][ADA_ERROR_SEVERITY_NONE]   = ADA_ERROR_LOG_TO_FILE;

$ADA_ERROR_POLICY[ADA_ERROR_PHASE_TEST][ADA_ERROR_SEVERITY_FATAL]  = ADA_ERROR_LOG_TO_FILE | ADA_ERROR_REDIRECT_TO_ERROR_PAGE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_TEST][ADA_ERROR_SEVERITY_NORMAL] = ADA_ERROR_LOG_TO_FILE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_TEST][ADA_ERROR_SEVERITY_LIGHT]  = ADA_ERROR_LOG_TO_FILE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_TEST][ADA_ERROR_SEVERITY_NONE]   = ADA_ERROR_LOG_TO_FILE;

$ADA_ERROR_POLICY[ADA_ERROR_PHASE_BETA][ADA_ERROR_SEVERITY_FATAL]  = ADA_ERROR_LOG_TO_FILE | ADA_ERROR_REDIRECT_TO_ERROR_PAGE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_BETA][ADA_ERROR_SEVERITY_NORMAL] = ADA_ERROR_LOG_TO_FILE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_BETA][ADA_ERROR_SEVERITY_LIGHT]  = ADA_ERROR_LOG_TO_FILE;// | ADA_ERROR_LOG_TO_HTML_COMMENT;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_BETA][ADA_ERROR_SEVERITY_NONE]   = NULL;

$ADA_ERROR_POLICY[ADA_ERROR_PHASE_PUBLIC][ADA_ERROR_SEVERITY_FATAL]  = ADA_ERROR_LOG_TO_FILE | ADA_ERROR_REDIRECT_TO_ERROR_PAGE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_PUBLIC][ADA_ERROR_SEVERITY_NORMAL] = ADA_ERROR_LOG_TO_FILE;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_PUBLIC][ADA_ERROR_SEVERITY_LIGHT]  = NULL;
$ADA_ERROR_POLICY[ADA_ERROR_PHASE_PUBLIC][ADA_ERROR_SEVERITY_NONE]   = NULL;

$GLOBALS['ADA_ERROR_POLICY'] = $ADA_ERROR_POLICY;